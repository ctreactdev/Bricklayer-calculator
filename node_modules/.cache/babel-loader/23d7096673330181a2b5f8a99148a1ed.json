{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cttor\\\\source\\\\repos\\\\murer-apps\\\\murer-nx\\\\libs\\\\ui\\\\src\\\\components\\\\molecules\\\\TextInput\\\\index.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport React from \"react\";\nimport { Field } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TextInput = values => {\n  if (values) {\n    const {\n      data,\n      schemaIds\n    } = values;\n\n    const assignIdsToSchemaInputs = () => {\n      data == null ? void 0 : data.map((object, index) => {\n        if (schemaIds !== undefined) {\n          object[\"id\"] = schemaIds[index] + \"_\" + [index];\n        }\n      });\n    };\n\n    assignIdsToSchemaInputs();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data == null ? void 0 : data.map((textObject, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `customField ${textObject.type + \"_element\"} ${textObject.class || \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customFieldBox1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: textObject == null ? void 0 : textObject.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: textObject == null ? void 0 : textObject.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customFieldBox2\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            value: undefined,\n            className: \"input inputStyle\",\n            type: \"text\",\n            placeholder: textObject == null ? void 0 : textObject.placeholder,\n            name: textObject == null ? void 0 : textObject.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  } else {\n    return null;\n  }\n};\n\n_c = TextInput;\nexport default TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["React","Field","TextInput","values","data","schemaIds","assignIdsToSchemaInputs","map","object","index","undefined","textObject","type","class","label","description","placeholder","id"],"sources":["C:/Users/cttor/source/repos/murer-apps/murer-nx/libs/ui/src/components/molecules/TextInput/index.js"],"sourcesContent":["import React from \"react\";\nimport { Field } from \"formik\";\n\nconst TextInput = (values) => {\n  if (values) {\n    const { data, schemaIds } = values;\n\n    const assignIdsToSchemaInputs = () => {\n      data?.map((object, index) => {\n        if (schemaIds !== undefined) {\n          object[\"id\"] = schemaIds[index] + \"_\" + [index];\n        }\n      });\n    };\n    assignIdsToSchemaInputs();\n    return (\n      <>\n        {data?.map((textObject, index) => (\n          <div\n            key={index}\n            className={`customField ${textObject.type + \"_element\"} ${\n              textObject.class || \"\"\n            }`}\n          >\n            <div className=\"customFieldBox1\">\n              <h4>{textObject?.label}</h4>\n              <p>{textObject?.description}</p>\n            </div>\n            <div className=\"customFieldBox2\">\n              <Field\n                value={undefined}\n                className=\"input inputStyle\"\n                type=\"text\"\n                placeholder={textObject?.placeholder}\n                name={textObject?.id}\n              />\n            </div>\n          </div>\n        ))}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TextInput;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,QAAtB;;;;AAEA,MAAMC,SAAS,GAAIC,MAAD,IAAY;EAC5B,IAAIA,MAAJ,EAAY;IACV,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAsBF,MAA5B;;IAEA,MAAMG,uBAAuB,GAAG,MAAM;MACpCF,IAAI,QAAJ,YAAAA,IAAI,CAAEG,GAAN,CAAU,CAACC,MAAD,EAASC,KAAT,KAAmB;QAC3B,IAAIJ,SAAS,KAAKK,SAAlB,EAA6B;UAC3BF,MAAM,CAAC,IAAD,CAAN,GAAeH,SAAS,CAACI,KAAD,CAAT,GAAmB,GAAnB,GAAyB,CAACA,KAAD,CAAxC;QACD;MACF,CAJD;IAKD,CAND;;IAOAH,uBAAuB;IACvB,oBACE;MAAA,UACGF,IADH,oBACGA,IAAI,CAAEG,GAAN,CAAU,CAACI,UAAD,EAAaF,KAAb,kBACT;QAEE,SAAS,EAAG,eAAcE,UAAU,CAACC,IAAX,GAAkB,UAAW,IACrDD,UAAU,CAACE,KAAX,IAAoB,EACrB,EAJH;QAAA,wBAME;UAAK,SAAS,EAAC,iBAAf;UAAA,wBACE;YAAA,UAAKF,UAAL,oBAAKA,UAAU,CAAEG;UAAjB;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAIH,UAAJ,oBAAIA,UAAU,CAAEI;UAAhB;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QANF,eAUE;UAAK,SAAS,EAAC,iBAAf;UAAA,uBACE,QAAC,KAAD;YACE,KAAK,EAAEL,SADT;YAEE,SAAS,EAAC,kBAFZ;YAGE,IAAI,EAAC,MAHP;YAIE,WAAW,EAAEC,UAAF,oBAAEA,UAAU,CAAEK,WAJ3B;YAKE,IAAI,EAAEL,UAAF,oBAAEA,UAAU,CAAEM;UALpB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAVF;MAAA,GACOR,KADP;QAAA;QAAA;QAAA;MAAA,QADD;IADH,iBADF;EA0BD,CArCD,MAqCO;IACL,OAAO,IAAP;EACD;AACF,CAzCD;;KAAMP,S;AA2CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}